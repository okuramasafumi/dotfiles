# zshrc

# Load uitily function
autoload -Uz is-at-least

# Config directory
ZSH_DIR="$HOME/.zsh"

# Remove dups from paths
typeset -aU path cdpath fpath manpath

# Add some completions (we need this before compinit)
[ -e /usr/local/share/zsh/functions ] && fpath=(/usr/local/share/zsh/functions $fpath)
[ -e /usr/local/share/zsh/site-functions ] && fpath=(/usr/local/share/zsh/site-functions $fpath)

[ -e $ZSH_DIR/completions ] && fpath=($ZSH_DIR/completions $fpath)

# The most important feature of zsh
autoload -Uz compinit && compinit

autoload -Uz zmv

# cdr
if is-at-least 4.3.11; then
  autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
  add-zsh-hook chpwd chpwd_recent_dirs
  zstyle ":chpwd:*" recent-dirs-max 500
  zstyle ":chpwd:*" recent-dirs-defalut true
  zstyle ":completion:*" recent-dirs-insert always
fi

# Zplug
if [[ -f ~/.zplug/init.zsh ]]; then
  source ~/.zplug/init.zsh

  zplug "zplug/zplug", hook-build:"zplug --self-manage"
  zplug "zsh-users/zsh-completions"
  zplug "zsh-users/zsh-history-substring-search", defer:3
  zplug "zsh-users/zsh-autosuggestions"
  zplug "zsh-users/zsh-syntax-highlighting", defer:2
  zplug "mollifier/anyframe"
  zplug "nojhan/liquidprompt"
  zplug "b4b4r07/emoji-cli"
  zplug "supercrabtree/k"
  zplug "okuramasafumi/zsh-sensible"
  zplug "zpm-zsh/ssh"

  if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
      echo; zplug install
    fi
  fi

  zplug load
fi

for config ($ZSH_DIR/*.zsh) do source $config; done

stty stop undef
stty start undef

# Anyframe
bindkey "^X'" anyframe-widget-cdr
bindkey "^Xh" anyframe-widget-put-history
bindkey "^Xt" anyframe-widget-tmux-attach
bindkey "^Xb" anyframe-widget-checkout-git-branch

bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

bindkey -e

[ -f /usr/local/share/chruby/chruby.sh ] && source /usr/local/share/chruby/chruby.sh
[ -f /usr/local/share/chruby/auto.sh ] && source /usr/local/share/chruby/auto.sh

if [[ -a ~/.zshrc.local ]]; then
  source ~/.zshrc.local
fi

# direnv
if type direnv > /dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

# the fuck
if type thefuck > /dev/null 2>&1; then
  eval "$(thefuck --alias)"
fi

# Reload path to remove dups
path=($path)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
